//	===============		Demonstration code for Drag and Drop was created by://	== CDDItem.h ==			gdignard@hookup.net (Gilles Dignard)//	===============			©1994 Gilles Dignard. All Rights Reserved#pragma once#include "Drag&Drop.h"#include <LCommander.h>#include <LPane.h>#include <LDragAndDrop.h>class LDragTask;class LStream;class CDDView;class CDDItem;enum ItemShape	{	eRectangle = cmd_Rectangle,					eOval = cmd_Oval};enum ItemFill	{	eWhite = cmd_FillWhite,					eLtGray = cmd_FillLtGray,					eGray = cmd_FillGray,					eDkGray = cmd_FillDkGray};//// A structure which will contain sufficient// data to build an item which looks and behaves// just like this one.//// We'll define a constant for the FlavorType// which will be associated with this structure//const Int32 cItemType = 'Itm2';	// Usable as a FlavorType or an OSTypestruct ItemData {	SPoint32		vLocation;	SDimension16	vItemSize;	ItemShape		vItemShape;	ItemFill		vItemFill;	//	// The pointer to the item is used for moving the object	// See comments in CDDView::ReceiveDragItem for more details	//	CDDItem*		vPointerToSourceObject;};class CDDItem : public LPane,				public LCommander{	public:							 CDDItem			(CDDView*		inParentView,							 					 ItemShape		inShape,							 					 ItemFill		inFill,							 					 Int16			inTop,							 					 Int16			inLeft,							 					 Int16			inBottom,							 					 Int16			inRight);							 					 							 CDDItem			(CDDView*		inParentView,							 					 ItemData		&inItemData);							 												~CDDItem			();				virtual void		FindCommandStatus	(CommandT	inCommand,												 Boolean	&outEnabled,												 Boolean	&outUsesMark,												 Char16		&outMark,												 Str255		outName);				virtual Boolean		ObeyCommand			(CommandT	inCommand,												 void*		ioParam = nil);				void				SetShape			(ItemShape inShape);		ItemShape			GetShape			() const { return fShape; }				void				SetFill				(ItemFill inFill);		ItemFill			GetFill				() const { return fFill; }				PicHandle			CreatePict			();		void				FillDataStruct		(ItemData &inDataStruct);			protected:		virtual void		DrawSelf			();				virtual void		ClickSelf			(const SMouseDownEvent &inMouseDown);				virtual void		BeTarget			();		virtual void		DontBeTarget		();				virtual void		DoQDInstructions	(Rect		&inFrame,												 Boolean	inDrawThickFrame = false);			private:		void				PlaceInClipboard	();				void				CreateDragEvent		(const SMouseDownEvent &inMouseDown);		void				CheckForTrash		(LDragTask* inDragTask);				void				DrawWithFrame		(Boolean inDrawThickFrame);				void				DeleteSelf			();				ItemShape			fShape;		ItemFill			fFill;		friend class CDDTask;};