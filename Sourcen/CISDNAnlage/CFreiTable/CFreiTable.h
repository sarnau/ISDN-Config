// ===========================================================================//	CFreiTable.cp					© 1996, Markus Fritze. All rights reserved.// ===========================================================================#pragma once#include <LWindow.h>#include <LTableView.h>#include <LAttachment.h>#include "CISDNAnlage.h"#include "PPFactory.h"// ---------------------------------------------------------------------------//		¥ Class CFreiTable// ---------------------------------------------------------------------------class	CFreiTable :	 public LWindow, public LAttachment {public:	static bool	sRegisterClass;public:	enum { class_ID = 'FrTa' };							CFreiTable() : LAttachment(msg_AnlageDirty, nil) {};						CFreiTable(SWindowInfo &inWindowInfo) : LWindow(inWindowInfo), LAttachment(msg_AnlageDirty, nil) {};						CFreiTable(ResIDT inWINDid, UInt32 inAttributes,								LCommander *inSuperCommander) : LWindow(inWINDid, inAttributes, inSuperCommander), LAttachment(msg_AnlageDirty, nil) {};						CFreiTable(LStream *inStream) : LWindow(inStream), LAttachment(msg_AnlageDirty, nil) {};	virtual void		FinishCreateSelf();protected:	CISDNAnlage			*mAnlage;	virtual void	ExecuteSelf(							MessageT		inMessage,							void			*ioParam);};// ---------------------------------------------------------------------------//		¥ Class CFreiTableView// ---------------------------------------------------------------------------class	CFreiTableView :	 public LTableView, public LCommander {public:	static bool	sRegisterClass;public:	enum { class_ID = 'FrTV' };							CFreiTableView() : LTableView() {};						CFreiTableView(const SPaneInfo &inPaneInfo, const SViewInfo &inViewInfo) : LTableView(inPaneInfo, inViewInfo) {};						CFreiTableView(LStream *inStream);	virtual Boolean		ClickSelect(								const STableCell		&inCell,								const SMouseDownEvent	&inMouseDown);	virtual void		ClickCell(								const STableCell		&inCell,								const SMouseDownEvent	&inMouseDown);protected:	CISDNAnlage			*mAnlage;	virtual void		DrawCell(								const STableCell		&inCell,								const Rect				&inLocalRect);};