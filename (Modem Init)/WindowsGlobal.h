/*** *	WindowsGlobal.h * *	©1991 C-Lab, Markus Fritze ***/#pragma once	// include this header				// only once per source file#define kUseCreatorString		(-1)		/* Pass this to StandardAbout if you would											   like the string stored in your creator											   resource to appear in the about box. */#define kUseRealAppName			(-2)		/* Pass this to StandardAbout if you would											   like the name of your application to											   appear in the about box. */#define kStartPtH				2			/* offset from the left of the screen */#define kStartPtV				2			/* offset from the top of the screen */#define kStaggerH				12			/* staggering amounts for new windows */#define kStaggerV				16short		WindowTHeight(WindowPtr w);void		NewDragWindow(WindowPtr w,Point pt,Rect *bounds);void		BringBehind(WindowPtr macWindow,WindowPtr behindWindow);Point		GetGlobalTopLeft(WindowPtr window);Rect		GetWindowStructureRect(WindowPtr window);Rect		GetWindowContentRect(WindowPtr window);Boolean		IsAppWindow(WindowPtr window);Boolean		IsDAWindow(WindowPtr window);Boolean		IsDialogWindow(WindowPeek window);Rect		GetMainScreenRect(void);GDHandle	GetRectDevice(Rect globalRect);Rect		GetRectDeviceRect(Rect globalRect);GDHandle	GetWindowDevice(WindowPtr window);Rect		GetWindowDeviceRect(WindowPtr window);Rect		GetWindowDeviceRectNMB(WindowPtr window);Rect		CenterWindow(WindowPtr window,WindowPtr relatedWindow);Rect		StaggerWindow(WindowPtr window, WindowPtr relatedWindow);void		ZoomToWindowDevice(WindowPtr window,short maxWidth,short maxHeight,short zoomDir,Boolean front);typedef struct	WindowTemplate	{	/* template to a WIND resource */	Rect	boundsRect;	short	procID;	Boolean	visible;	Boolean	filler1;	Boolean	goAwayFlag;	Boolean	filler2;	long	refCon;	Str255	title;} WindowTemplate, *WindowTPtr, **WindowTHndl;